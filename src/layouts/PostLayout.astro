---
import RootLayout from "./RootLayout.astro";
import { MDCONFIG, SITE } from "@/config";
import { ArrowRight } from "lucide-react";
import TagList from "@/components/TagList.astro";
import Comments from "@/components/Comments.astro";
const { frontmatter } = Astro.props;
---

<RootLayout title={frontmatter.title}>
    <div class="w-1/4"></div>
    <div class="w-1/2 flex-1 flex flex-col">
        <p id="top"></p>
        <div class="w-full py-10 px-8 flex flex-col items-start">
            <div class="text-5xl font-bold">
                {frontmatter.title}
            </div>
            <div class="my-3 text-base flex font-normal">
                <div class="">
                    {
                        frontmatter.pubDate.getFullYear() +
                            "-" +
                            frontmatter.pubDate.getMonth() +
                            "-" +
                            frontmatter.pubDate.getDate()
                    }
                </div>
                <div class="px-1">Â·</div>
                <div>
                    {SITE.author}
                </div>
            </div>
        </div>
        <div class="">
            <article
                class="mx-8 my-5 dark:prose-invert
            prose-base prose max-w-none break-words
            prose-a:text-ring
            prose-strong:text-ring
            marker:text-ring
            prose-blockquote:bg-ring/5
            prose-headings:underline prose-headings:decoration-ring
            hover:prose-tr:bg-ring/20"
            >
                <slot />
            </article>
        </div>
        <hr />
        <TagList frontmatter={frontmatter} />
        <Comments />
    </div>
    <div class="w-1/4 flex">
        {MDCONFIG.show && <slot name="toc" />}

        {
            (
                <div
                    onclick={"scrollToSection('top')"}
                    class="fixed mx-8 bottom-10 flex origin-left -rotate-90"
                >
                    <ArrowRight className="stroke-ring scale-125 hover:scale-150 transition delay-0 ease-in-out" />
                    <a
                        href={"mailto:" + SITE.mail}
                        class="select-none text-lg px-2"
                    >
                        {SITE.mail}
                    </a>
                </div>
            )
        }
    </div>
</RootLayout>

<script is:inline>
    function scrollToSection(sectionId) {
        var section = document.getElementById(sectionId);
        var sectionTop =
            section.getBoundingClientRect().top + window.scrollY - 100;
        window.scrollTo({
            top: sectionTop,
            behavior: "smooth",
        });
    }
</script>

<script is:inline>
    function attachCopyButtons() {
        /** Attaches copy buttons to code blocks in the document,
         * allowing users to copy code easily. */
        let copyButtonLabel = "Copy";
        let codeBlocks = Array.from(document.querySelectorAll("pre"));

        for (let codeBlock of codeBlocks) {
            let wrapper = document.createElement("div");
            wrapper.style.position = "relative";

            let copyButton = document.createElement("button");
            copyButton.className =
                "copy-code absolute right-3 -top-3 rounded bg-border px-2 py-1 text-xs leading-4 text-accent-foreground font-medium";
            copyButton.innerHTML = copyButtonLabel;
            codeBlock.setAttribute("tabindex", "0");
            codeBlock.appendChild(copyButton);

            // wrap codebock with relative parent element
            codeBlock.parentNode.insertBefore(wrapper, codeBlock);
            wrapper.appendChild(codeBlock);

            copyButton.addEventListener("click", async () => {
                await copyCode(codeBlock, copyButton);
            });
        }

        async function copyCode(block, button) {
            let code = block.querySelector("code");
            let text = code.innerText;

            await navigator.clipboard.writeText(text);

            // visual feedback that task is completed
            button.innerText = "Copied";

            setTimeout(() => {
                button.innerText = copyButtonLabel;
            }, 700);
        }
    }
    attachCopyButtons();
    document.addEventListener("astro:after-swap", attachCopyButtons);

    /** Scrolls the document to the top when
     * the "Back to Top" button is clicked. */
    function backToTop() {
        document
            .querySelector("#back-to-top")
            ?.addEventListener("click", () => {
                document.body.scrollTop = 0; // For Safari
                document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera
            });
    }
    backToTop();
    document.addEventListener("astro:after-swap", backToTop);
</script>

